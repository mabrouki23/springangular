{"ast":null,"code":"import { CommProd } from '../models/commProd.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../commande.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction CommandeClientComponent_div_0_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 11);\n    i0.ɵɵelement(2, \"img\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelementStart(10, \"form\", 13);\n    i0.ɵɵelementStart(11, \"div\", 14);\n    i0.ɵɵelement(12, \"input\", 15);\n    i0.ɵɵtext(13, \" \\u00A0 \");\n    i0.ɵɵelementStart(14, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function CommandeClientComponent_div_0_tr_22_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.onModifierCommandeProduct(i_r3);\n    });\n    i0.ɵɵtext(15, \" Modifer \");\n    i0.ɵɵelement(16, \"i\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵelementStart(18, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function CommandeClientComponent_div_0_tr_22_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.onDeleteCommandeProduct(i_r3);\n    });\n    i0.ɵɵtext(19, \" supprimer \");\n    i0.ɵɵelement(20, \"i\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const p_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"data:image/jpeg;base64,\", p_r2.product.data, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r2.product.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r2.product.price);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(p_r2.quantite);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.panierForm);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", p_r2.quantite);\n  }\n}\n\nfunction CommandeClientComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2, \" commande : \");\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 3);\n    i0.ɵɵelementStart(6, \"table\", 4);\n    i0.ɵɵelementStart(7, \"thead\");\n    i0.ɵɵelementStart(8, \"tr\");\n    i0.ɵɵelementStart(9, \"th\", 5);\n    i0.ɵɵtext(10, \"Image \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 5);\n    i0.ɵɵtext(12, \"Produit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\", 5);\n    i0.ɵɵtext(14, \"Prix Unitaire\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\", 5);\n    i0.ɵɵtext(16, \"Quantit\\u00E9 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\", 5);\n    i0.ɵɵtext(18, \"Modifier quantit\\u00E9\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\", 5);\n    i0.ɵɵtext(20, \"Supprimer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"tbody\");\n    i0.ɵɵtemplate(22, CommandeClientComponent_div_0_tr_22_Template, 21, 6, \"tr\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 7);\n    i0.ɵɵelementStart(24, \"h4\", 8);\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CommandeClientComponent_div_0_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onConfirmerCommade();\n    });\n    i0.ɵɵelement(27, \"i\", 10);\n    i0.ɵɵtext(28, \" \\u00A0 Confirmer Commande \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.commande.commandeId);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.commandePoducts);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Totale apres tax:\", ctx_r0.totalPrice, \" \\u20AC \");\n  }\n}\n\nexport let CommandeClientComponent = /*#__PURE__*/(() => {\n  class CommandeClientComponent {\n    constructor(_router, _activtedRoute, commandeService, formBuilder) {\n      this._router = _router;\n      this._activtedRoute = _activtedRoute;\n      this.commandeService = commandeService;\n      this.formBuilder = formBuilder;\n      this.totalPrice = 0;\n      this.cpt = 0;\n      this.showSpinner = false;\n      this.panierForm = this.formBuilder.group({\n        quantite: 1\n      });\n      this.commande = this._router.getCurrentNavigation().extras.state;\n      this.commandePoducts = this.commande.commandeProducts;\n      this.totalPrice = 0;\n\n      for (let index = 0; index < this.commandePoducts.length; index++) {\n        const element = this.commandePoducts[index];\n        this.totalPrice = this.totalPrice + element.quantite * element.product.price;\n        this.commProd = new CommProd();\n        this.commProd.commandeId = this.commande.commandeId;\n        this.commProd.productId = element.product.productId;\n        this.commProd.quantite = element.quantite;\n        this.commandePoducts[index].quantite = element.quantite;\n      } //total price apres tax\n\n\n      this.totalPrice = this.totalPrice * (1 + 0.17);\n      this.taxPrice = this.totalPrice * 0.17;\n    }\n\n    ngOnInit() {}\n\n    onDeleteCommandeProduct(i) {\n      this.selectedCommandeProduct = this.commandePoducts[i];\n\n      for (let index = 0; index < this.commandePoducts.length; index++) {\n        const element = this.commandePoducts[index];\n\n        if (this.selectedCommandeProduct.product.productId === element.product.productId) {\n          this.commandePoducts.splice(index, 1);\n        }\n      }\n\n      this.totalPrice = 0;\n\n      for (let index = 0; index < this.commandePoducts.length; index++) {\n        const element = this.commandePoducts[index];\n        this.totalPrice = this.totalPrice + element.quantite * element.product.price;\n      }\n\n      this.taxPrice = this.totalPrice * 0.17;\n      this.totalPrice = this.totalPrice * (1 + 0.17);\n      this.commande.totalPrice = this.totalPrice;\n    }\n\n    onConfirmerCommade() {\n      //accumulation du quntite du meme produit dans un unique product   \n      for (let index = 0; index < this.commandePoducts.length - 1; index++) {\n        for (let index1 = index + 1; index1 < this.commandePoducts.length; index1++) {\n          if (this.commandePoducts[index].product.productId == this.commandePoducts[index1].product.productId) {\n            this.commandePoducts[index].quantite = this.commandePoducts[index].quantite + this.commandePoducts[index1].quantite;\n            this.commandePoducts.splice(index1, 1); //pour garder la place jusqu au condition contraire\n\n            index1 = index1 - 1;\n          }\n        }\n      }\n\n      console.log(this.commandePoducts);\n\n      for (let index = 0; index < this.commandePoducts.length; index++) {\n        const element = this.commandePoducts[index];\n        this.commProd = new CommProd();\n        this.commProd.commandeId = this.commande.commandeId;\n        this.commProd.productId = element.product.productId;\n        this.commProd.quantite = element.quantite;\n        this.commandeService.saveOrderProduct(this.commProd).subscribe({\n          next: data => {\n            console.log(data);\n          },\n          error: error => {\n            console.error('There was an error!', error);\n          }\n        });\n      }\n\n      const body = {\n        commandeId: this.commande.commandeId,\n        commandeType: \"importe\",\n        isPaid: true,\n        paymentType: \"cach\",\n        totalPrice: this.totalPrice,\n        taxPrice: this.totalPrice * 0.17\n      };\n      this.commandeService.saveCommande(body).subscribe({\n        next: data => {\n          this.showSpinner = true;\n        },\n        error: error => {\n          console.error('There was an error!', error);\n        }\n      });\n\n      this._router.navigate(['home']);\n    }\n\n    onModifierCommandeProduct(i) {\n      var _a;\n\n      this.selectedCommandeProduct = this.commandePoducts[i];\n      this.quantite = (_a = this.panierForm.get(\"quantite\")) === null || _a === void 0 ? void 0 : _a.value;\n      this.selectedCommandeProduct.quantite = this.quantite; //reclculer le prix total puis mettre a jour le prix dans la commande\n\n      this.commandePoducts[i].quantite = this.quantite;\n      this.totalPrice = 0;\n\n      for (let index = 0; index < this.commandePoducts.length; index++) {\n        const element = this.commandePoducts[index];\n        this.totalPrice = this.totalPrice + element.quantite * element.product.price;\n      }\n\n      this.totalPrice = this.totalPrice * (1 + 0.17);\n      this.taxPrice = this.totalPrice * 0.17;\n      this.commande.totalPrice = this.totalPrice; //todo\n      //appel a la methode qui update la commande....to\n\n      this.ngOnInit();\n    }\n\n    updateCommande(commande, commandeId) {}\n\n  }\n\n  CommandeClientComponent.ɵfac = function CommandeClientComponent_Factory(t) {\n    return new (t || CommandeClientComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CommandeService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  CommandeClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CommandeClientComponent,\n    selectors: [[\"app-commande-client\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"card text-center\", 4, \"ngIf\"], [1, \"card\", \"text-center\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", \"text-muted\"], [2, \"color\", \"black\", \"font-size\", \"15px\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-cart-arrow-down\", \"fa-2x\"], [\"scope\", \"row\"], [\"alt\", \"...\", 1, \"img-thumbnail\", 3, \"src\"], [3, \"formGroup\"], [1, \"form-group\"], [\"type\", \"number\", \"id\", \"tentacles\", \"name\", \"tentacles\", \"min\", \"0\", \"max\", \"100\", \"formControlName\", \"quantite\", 3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil\", \"fa-1x\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash-o\", \"fa-1x\"]],\n    template: function CommandeClientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CommandeClientComponent_div_0_Template, 29, 3, \"div\", 0);\n        i0.ɵɵelement(1, \"br\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.commandePoducts.length > 0);\n      }\n    },\n    directives: [i4.NgIf, i4.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.MinValidator, i3.MaxValidator, i3.NumberValueAccessor, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName],\n    styles: [\"\"]\n  });\n  return CommandeClientComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}